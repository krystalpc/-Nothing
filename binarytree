 struct TreeNode {
    int val;
    TreeNode *left;
    TreeNode *right;
    TreeNode(int x) : val(x), left(NULL), right(NULL) {}
  };
class Solution {
public:
    bool isSubStructure(TreeNode* A, TreeNode* B) {
        if(!A || !B) return false;
        bool res = false;
        if(A -> val == B -> val) res = doesAHaveB(A, B);
        if(!res) res = isSubStructure(A -> left, B);
        if(!res) res = isSubStructure(A -> right, B);
        return res;
    }
    bool doesAHaveB(TreeNode *r1, TreeNode *r2)
    {
        if(!r2) return true;
        if(!r1) return false;
        if(r1 -> val != r2 -> val) return false;
        return doesAHaveB(r1 -> left, r2 -> left) && doesAHaveB(r1 -> right, r2 -> right);
    }
};

